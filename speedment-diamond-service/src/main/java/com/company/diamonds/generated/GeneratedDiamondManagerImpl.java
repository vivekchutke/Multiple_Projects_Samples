package com.company.diamonds.generated;

import com.company.diamonds.Diamond;
import com.company.diamonds.DiamondImpl;
import com.company.diamonds.DiamondManager;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.manager.AbstractManager;
import com.speedment.runtime.field.Field;

import java.util.stream.Stream;

/**
 * The generated base implementation for the manager of every {@link
 * com.company.diamonds.Diamond} entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedDiamondManagerImpl 
extends AbstractManager<Diamond> 
implements GeneratedDiamondManager {
    
    private final TableIdentifier<Diamond> tableIdentifier;
    
    protected GeneratedDiamondManagerImpl() {
        this.tableIdentifier = TableIdentifier.of("diamonds", "diamonds", "diamond");
    }
    
    @Override
    public Diamond create() {
        return new DiamondImpl();
    }
    
    @Override
    public TableIdentifier<Diamond> getTableIdentifier() {
        return tableIdentifier;
    }
    
    @Override
    public Stream<Field<Diamond>> fields() {
        return DiamondManager.FIELDS.stream();
    }
    
    @Override
    public Stream<Field<Diamond>> primaryKeyFields() {
        return Stream.of(
            Diamond.ID
        );
    }
}