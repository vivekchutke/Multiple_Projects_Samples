package com.company.diamonds.diamonds.diamonds.hibernate_sequence.generated;

import com.company.diamonds.diamonds.diamonds.hibernate_sequence.HibernateSequence;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.enterprise.datastore.runtime.field.DatastoreFields;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.util.OptionalUtil;
import com.speedment.runtime.field.ComparableField;
import com.speedment.runtime.typemapper.TypeMapper;

import java.util.OptionalLong;

/**
 * The generated base for the {@link
 * com.company.diamonds.diamonds.diamonds.hibernate_sequence.HibernateSequence}-interface
 * representing entities of the {@code hibernate_sequence}-table in the
 * database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public interface GeneratedHibernateSequence {
    
    /**
     * This Field corresponds to the {@link HibernateSequence} field that can be
     * obtained using the {@link HibernateSequence#getNextVal()} method.
     */
    ComparableField<HibernateSequence, Long, Long> NEXT_VAL = DatastoreFields.createComparableField(
        Identifier.NEXT_VAL,
        o -> OptionalUtil.unwrap(o.getNextVal()),
        HibernateSequence::setNextVal,
        TypeMapper.identity(),
        false
    );
    
    /**
     * Returns the nextVal of this HibernateSequence. The nextVal field
     * corresponds to the database column
     * diamonds.diamonds.hibernate_sequence.next_val.
     * 
     * @return the nextVal of this HibernateSequence
     */
    OptionalLong getNextVal();
    
    /**
     * Sets the nextVal of this HibernateSequence. The nextVal field corresponds
     * to the database column diamonds.diamonds.hibernate_sequence.next_val.
     * 
     * @param nextVal to set of this HibernateSequence
     * @return        this HibernateSequence instance
     */
    HibernateSequence setNextVal(Long nextVal);
    
    enum Identifier implements ColumnIdentifier<HibernateSequence> {
        
        NEXT_VAL ("next_val");
        
        private final String columnId;
        private final TableIdentifier<HibernateSequence> tableIdentifier;
        
        Identifier(String columnId) {
            this.columnId        = columnId;
            this.tableIdentifier = TableIdentifier.of(    getDbmsId(), 
                getSchemaId(), 
                getTableId());
        }
        
        @Override
        public String getDbmsId() {
            return "diamonds";
        }
        
        @Override
        public String getSchemaId() {
            return "diamonds";
        }
        
        @Override
        public String getTableId() {
            return "hibernate_sequence";
        }
        
        @Override
        public String getColumnId() {
            return this.columnId;
        }
        
        @Override
        public TableIdentifier<HibernateSequence> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}